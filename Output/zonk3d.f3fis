; Gradually relax the stresses around an excavated area 
; (the zones belonging to group 'zonk').

; find max young's modulus
; replace material model in zonked zones with elastic material
def setup
  global pzz = get_array(1000) ; pointers to zonked zones
  global inzz = 0              ; number of zonked zones
  global emax  = 0.0
  local pz = zone_head
  loop while pz # null
    if z_group(pz) = 'zonk' then
       if z_model(pz) # 'null' then
         inzz = inzz + 1
         pzz(inzz) = pz
         local k = z_prop(pz,'bulk')
         local g = z_prop(pz,'shear')
         local e = 9*k*g/(3*k+g)
         if e > emax then
           emax = e
           global pz_emax = pz
         endif
         z_model(pz) = 'elastic'
         z_prop(pz, 'bulk')  = k
         z_prop(pz, 'shear') = g
       endif
    endif
    pz = z_next(pz)
  endloop
end
@setup

; gradually reduce the stiffness and stress in zonked zones
; argument factor is used to reduce modulus and stress values
def reduce(factor)
  emax = emax * factor
  local ii
  loop ii(1,inzz)
    local pz = pzz(ii)
    z_prop(pz,'bulk')  = factor * z_prop(pz,'bulk')
    z_prop(pz,'shear') = factor * z_prop(pz,'shear')
    z_sxx(pz) = factor * z_sxx(pz)
    z_sxy(pz) = factor * z_sxy(pz)
    z_sxz(pz) = factor * z_sxz(pz)
    z_syy(pz) = factor * z_syy(pz)
    z_syz(pz) = factor * z_syz(pz)
    z_szz(pz) = factor * z_szz(pz)
  endloop
end

def dozonk
; stop reducing when max Young's modulus is below 5% 
; of its max initial value
  local emin = emax * 0.05 
  loop while emax > emin
    reduce(0.95)
    command
      solve
    endcommand
  endloop
  ; make all zonked zones null material
  loop ii(1,inzz)
    local pz = pzz(ii)
    z_model(pz) = 'null'
  endloop
  command
    solve
  endcommand
end
@dozonk